import{_ as n,c as l,o as h,a4 as a,m as s,a as i}from"./chunks/framework.IpiIUH1b.js";const p="/assets/image-20210329163755741.DNv_iNTf.png",t="/assets/image-20210329172935229.cOLjMsBe.png",k="/assets/image-20210330193948869.DzFty3Xp.png",m=JSON.parse('{"title":"匿名对象 , 继承 , 抽象类","description":"","frontmatter":{},"headers":[],"relativePath":"java/02 javaSE进阶/01 匿名对象 继承 抽象类/01 匿名对象 继承 抽象类.md","filePath":"java/02 javaSE进阶/01 匿名对象 继承 抽象类/01 匿名对象 继承 抽象类.md","lastUpdated":1722566031000}'),e={name:"java/02 javaSE进阶/01 匿名对象 继承 抽象类/01 匿名对象 继承 抽象类.md"},r=a("",4),E=s("ul",null,[s("li",null,[s("h5",{id:"面向对象的核心思想是什么",tabindex:"-1"},[i("面向对象的核心思想是什么 ? "),s("a",{class:"header-anchor",href:"#面向对象的核心思想是什么","aria-label":'Permalink to "面向对象的核心思想是什么 ?"'},"​")]),s("ul",null,[s("li",null,"用代码来模拟现实生活中的事物 , 比如学生类表示学生事物 , 对象表示的就是具体的学生 , 有了类就可以描述万千世界所有的事物了")])]),s("li",null,[s("h5",{id:"现有的类还是先有的对象",tabindex:"-1"},[i("现有的类还是先有的对象 ? "),s("a",{class:"header-anchor",href:"#现有的类还是先有的对象","aria-label":'Permalink to "现有的类还是先有的对象 ?"'},"​")]),s("ul",null,[s("li",null,"对象是根据类创建出来的 , 所有现有的类 , 再有对象")])]),s("li",null,[s("h5",{id:"java类的创建",tabindex:"-1"},[i("Java类的创建 ? "),s("a",{class:"header-anchor",href:"#java类的创建","aria-label":'Permalink to "Java类的创建 ?"'},"​")]),s("ul",null,[s("li",null,"类名建议使用大驼峰命名法 , 每个单词首字母需要大写"),s("li",null,"Java规定 , 一个Java文件中可以定义多个类 , 但是只能有一个类使用public修饰 , public修饰的类名需要和java文件名保持一致"),s("li",null,"按照规范 , 实际工作之时 , 建议一个Java文件中只能有一个类")])]),s("li",null,[s("h5",{id:"类中的组成成分",tabindex:"-1"},[i("类中的组成成分 ? "),s("a",{class:"header-anchor",href:"#类中的组成成分","aria-label":'Permalink to "类中的组成成分 ?"'},"​")]),s("ul",null,[s("li",null,"1 成员变量"),s("li",null,"2 成员方法"),s("li",null,"3 构造方法"),s("li",null,"4 内部类(后面学)"),s("li",null,"5 代码块(后面学)")]),s("img",{src:p,alt:"image-20210329163755741",style:{zoom:"80%"}})]),s("li",null,[s("h5",{id:"创建对象所使用的关键字",tabindex:"-1"},[i("创建对象所使用的关键字 ? "),s("a",{class:"header-anchor",href:"#创建对象所使用的关键字","aria-label":'Permalink to "创建对象所使用的关键字 ?"'},"​")]),s("ul",null,[s("li",null,"new关键字")])]),s("li",null,[s("h5",{id:"创建对象的格式",tabindex:"-1"},[i("创建对象的格式 ? "),s("a",{class:"header-anchor",href:"#创建对象的格式","aria-label":'Permalink to "创建对象的格式 ?"'},"​")]),s("ul",null,[s("li",null,"类名 对象名 = new 类名(参数列表);")])]),s("li",null,[s("h5",{id:"调用对象的成员",tabindex:"-1"},[i("调用对象的成员 ? "),s("a",{class:"header-anchor",href:"#调用对象的成员","aria-label":'Permalink to "调用对象的成员 ?"'},"​")]),s("ul",null,[s("li",null,"调用成员变量 : 对象名.成员变量名"),s("li",null,"调用成员方法 : 对象名.成员方法名(参数)")])]),s("li",null,[s("h5",{id:"定义构造方法的格式",tabindex:"-1"},[i("定义构造方法的格式 ? "),s("a",{class:"header-anchor",href:"#定义构造方法的格式","aria-label":'Permalink to "定义构造方法的格式 ?"'},"​")]),s("ul",null,[s("li",{"css-module":"."},"修饰符 类名(参数)")])]),s("li",null,[s("h5",{id:"定义构造方法的特点",tabindex:"-1"},[i("定义构造方法的特点 ? "),s("a",{class:"header-anchor",href:"#定义构造方法的特点","aria-label":'Permalink to "定义构造方法的特点 ?"'},"​")]),s("ul",null,[s("li",null,"没有返回值 , 连void都没有"),s("li",null,"方法名与类名相同"),s("li",null,"构造方法可以进行重载定义")])]),s("li",null,[s("h5",{id:"构造方法的作用",tabindex:"-1"},[i("构造方法的作用 ? "),s("a",{class:"header-anchor",href:"#构造方法的作用","aria-label":'Permalink to "构造方法的作用 ?"'},"​")]),s("ul",null,[s("li",null,"空参构造 : 初始化对象的数据为默认值"),s("li",null,"有参构造 : 初始化对象时 , 为对象的属性赋值")])]),s("li",null,[s("h5",{id:"面向对象三大特征是什么",tabindex:"-1"},[i("面向对象三大特征是什么 ? "),s("a",{class:"header-anchor",href:"#面向对象三大特征是什么","aria-label":'Permalink to "面向对象三大特征是什么 ?"'},"​")]),s("ul",null,[s("li",null,"封装 , 继承 , 多态")])]),s("li",null,[s("h5",{id:"封装的思想及其作用",tabindex:"-1"},[i("封装的思想及其作用 ? "),s("a",{class:"header-anchor",href:"#封装的思想及其作用","aria-label":'Permalink to "封装的思想及其作用 ?"'},"​")]),s("ul",null,[s("li",null,"思想 : 把实现细节隐藏 , 对外提供公共的访问方式"),s("li",null,"作用 : 提高代码的安全性 , 提高代码的复用性")])]),s("li",null,[s("h5",{id:"封装的步骤",tabindex:"-1"},[i("封装的步骤 ? "),s("a",{class:"header-anchor",href:"#封装的步骤","aria-label":'Permalink to "封装的步骤 ?"'},"​")]),s("ul",null,[s("li",null,"把成员变量进行private修饰"),s("li",null,"提供对应的setter和getter方法")])]),s("li",null,[s("h5",{id:"this关键字的含义",tabindex:"-1"},[i("this关键字的含义 ? "),s("a",{class:"header-anchor",href:"#this关键字的含义","aria-label":'Permalink to "this关键字的含义 ?"'},"​")]),s("ul",null,[s("li",null,"this代表的是本类对象的引用"),s("li",null,"在构造方法中 , this代表的是new的对象"),s("li",null,"在成员方法中 , this代表的是调用此方法的对象")])]),s("li",null,[s("h5",{id:"this关键字的作用",tabindex:"-1"},[i("this关键字的作用 ? "),s("a",{class:"header-anchor",href:"#this关键字的作用","aria-label":'Permalink to "this关键字的作用 ?"'},"​")]),s("ul",null,[s("li",null,"主要用于区分局部变量和成员变量同名的问题")])])],-1),d=a("",36),g=[r,E,d];function y(c,o,u,F,A,D){return h(),l("div",null,g)}const C=n(e,[["render",y]]);export{m as __pageData,C as default};
