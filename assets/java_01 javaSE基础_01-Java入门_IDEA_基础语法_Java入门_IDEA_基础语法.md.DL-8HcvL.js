import{_ as t,E as h,c as e,m as s,a as i,J as p,w as n,a4 as l,o as k}from"./chunks/framework.IpiIUH1b.js";const r="/assets/1639721803949.D3mI_BCk.png",o="/assets/1639722499072.agKNV6_9.png",g="/assets/1639722609776.BsTNLRE3.png",E="/assets/1639722652087.DhP_a7Cc.png",d="/assets/1639723022786.CXJiq2Qo.png",c="/assets/1639723620672.BvSJqYAI.png",y="/assets/1639724104275.BjMmyhNU.png",_="/assets/1639724256038.C-XBdx3r.png",m="/assets/1639724347484.D2ukAvgn.png",D="/assets/1639724972428.Dr2YA7sb.png",u="/assets/1639725058972.Cq4ql2ET.png",A="/assets/1639725135186.BJS6PXMz.png",F="/assets/1639725324201.CgOt17Iz.png",v="/assets/1639725274572.D2oVhTo_.png",C="/assets/1639725464573.DYu7PIF5.png",B="/assets/1639725550686.BsHkvVO6.png",J="/assets/1639725745872.C5UBBTs_.png",b="/assets/1639725786272.CiSzDvIY.png",q="/assets/1639738100464.CfrNPI_d.png",S="/assets/1639738273278.DvEhccP7.png",I="/assets/1639739017544.Bkomd8mJ.png",j="/assets/1639739214830.D5SunPoS.png",f="/assets/1639739296629.BdFxfB8s.png",K="/assets/1639740068163.BfTXt4E7.png",P="/assets/1639740084193.ByvzHo42.png",T="/assets/1639740114726.BVwj_1xH.png",x="/assets/1639740232557.CysnvyKq.png",w="/assets/1639740655793.DIOIwKsW.png",H="/assets/1639740671954.Bi1LYF45.png",W="/assets/1639740689831.DbpCnFil.png",O="/assets/1639740752206.o5vWwqRK.png",N="/assets/1639741645239.CjhYUPw3.png",V="/assets/1639741741808.DA369CSf.png",Q="/assets/1639741820153.BHvMjoG2.png",M="/assets/1639741944747.B8tgoCTI.png",z="/assets/1639742119302.9FrsCWu6.png",L="/assets/1639742154126.C3Kfzetg.png",R="/assets/1639742942464.BnPW9ia-.png",Y="/assets/1639742964462.Bs1_CJZ9.png",U="/assets/1639743071477.72M9r99w.png",X="/assets/1639743315958.P9IzccNg.png",Z="/assets/1639743577863.BXCaY02B.png",G="/assets/1639743669575.D6Ji6ASj.png",$="/assets/1639743724589.AWfi-d_U.png",ss="/assets/1639743835817.CE5jR0m6.png",is="/assets/1639743891697.BeZYRkEF.png",as="/assets/1639744009142.CU1y-1t0.png",ps="/assets/1639744035432.DPwAdTN-.png",ns="/assets/1639744182660.CP34Cm0H.png",ls="/assets/1639744260619.BmhUQd5A.png",ts="/assets/1639744399116.Cns49ZBa.png",hs="/assets/1639744560888.C1Y_QNpp.png",es="/assets/1639744630418.YrCNgysV.png",ks="/assets/1639744766449.BUf8dphJ.png",rs="/assets/1639744868162.oJIZMVge.png",os="/assets/1639744975845.CWffordo.png",gs="/assets/1639745070048.7kdepTbO.png",Es="/assets/1639745121075.BThtWpFQ.png",ds="/assets/1639745243246.fnKQcd6F.png",cs="/assets/1639745404879.BtOXnevT.png",ys="/assets/1639745447646.Bb4vUAh4.png",_s="/assets/1639745503256.COleIai9.png",ms="/assets/1639745567182.BmQrypzL.png",Ds="/assets/1639745635074.CnIypT_9.png",us="/assets/1639745672970.BZXD9CTh.png",As="/assets/1639745760081.Vh2h2GF1.png",Fs="/assets/1639745840868.CoUQ5eiv.png",vs="/assets/1639745874976.Bah0BY3k.png",Cs="/assets/1639746135128.C5TFX1dE.png",Bs="/assets/1639746171990.y7gd1ge-.png",Js="/assets/1639746269066.B7tjizfy.png",bs="/assets/1639746912516.CMN5PKMM.png",qs="/assets/1639747135494.DxOm9z_7.png",Ss="/assets/1639747240911.CHt84B64.png",Is="/assets/1639747313468.Cvjq_T4h.png",js="/assets/1639747438239.DrR7LKyO.png",fs="/assets/1639747499310.BwOAyotC.png",Ks="/assets/1639747543186.8I6dHHBT.png",Ps="/assets/1639746974241.gmpyqLoO.png",Ts="/assets/1639748122994.D0dITQr1.png",xs="/assets/1639748232481._0T8EHxu.png",ws="/assets/1639748532558.Cp5dfSlY.png",Hs="/assets/1639748712003.Ddfzx4go.png",Ws="/assets/1639748785687.DpLiExb0.png",Os="/assets/1639748866566.BaZsM-se.png",Ns="/assets/1639749167095.BbvLxeNm.png",Vs="/assets/1639749235135.Cy_jQ3Ml.png",Qs="/assets/1639749348313.Dn7hH7qL.png",Ms="/assets/1639749389479.CFa16FQN.png",zs="/assets/1639749434719.Cdpuo1bu.png",Ls="/assets/1639749873847.CMuyt24K.png",Rs="/assets/1639749999955.ZSVhmqrD.png",Ys="/assets/1639750064471.bpkvbqN5.png",Us="/assets/1639750407320.BvPutxQp.png",Xs="/assets/1639750514625.C0JJvvfw.png",Zs="/assets/1639751032842.B5Du4cAR.png",Ai=JSON.parse('{"title":"Java入门&IDEA&基础语法","description":"","frontmatter":{},"headers":[],"relativePath":"java/01 javaSE基础/01-Java入门&IDEA&基础语法/Java入门&IDEA&基础语法.md","filePath":"java/01 javaSE基础/01-Java入门&IDEA&基础语法/Java入门&IDEA&基础语法.md","lastUpdated":1722215750000}'),Gs={name:"java/01 javaSE基础/01-Java入门&IDEA&基础语法/Java入门&IDEA&基础语法.md"},$s=l('<h1 id="java入门-idea-基础语法" tabindex="-1">Java入门&amp;IDEA&amp;基础语法 <a class="header-anchor" href="#java入门-idea-基础语法" aria-label="Permalink to &quot;Java入门&amp;IDEA&amp;基础语法&quot;">​</a></h1><p><strong>学习目标：</strong></p><ul><li>能够完成JDK和IDEA的安装</li><li>能够知道Java程序开发流程</li><li>能够完成Java环境变量的配置</li><li>能够使用IDEA进行Java程序的开发</li><li>能够根据需求完成变量的定义和使用(包括输出和修改)</li><li>能够知道注释，字面量，关键字，标识符的作用</li></ul><h2 id="_1-java入门" tabindex="-1">1：Java入门 <a class="header-anchor" href="#_1-java入门" aria-label="Permalink to &quot;1：Java入门&quot;">​</a></h2><h3 id="_1-1-java简介" tabindex="-1">1.1 Java简介 <a class="header-anchor" href="#_1-1-java简介" aria-label="Permalink to &quot;1.1 Java简介&quot;">​</a></h3><p>下面我们正式进入Java的学习，在这里，大家第一个关心的问题，应该就是Java是什么，我们一起来看一下：</p><p><strong>Java是什么：</strong></p><ul><li>Java是一门非常优秀的计算机语言 <ul><li>语言：人与人交流沟通的表达方式</li><li>计算机语言：人与计算机之间进行信息交流沟通的一种特殊语言</li></ul></li><li>Java之父：詹姆斯·高斯林（James Gosling）</li></ul><p><img src="'+r+'" alt="1639721803949"></p><p>知道了Java是什么之后，大家就会想，我们学完Java可以做什么呢？下面，我们就来聊一聊，Java的三大技术平台：</p><p><strong>1：JavaSE</strong></p><p><img src="'+o+'" alt="1639722499072"></p><p><strong>2：JavaME</strong></p><p><img src="'+g+'" alt="1639722609776"></p><p><strong>3：JavaEE</strong></p><p><img src="'+E+'" alt="1639722652087"></p><p>知道了Java是什么，以及可以做什么之后，我们来说一下这一块的课程安排：</p><p><img src="'+d+'" alt="1639723022786"></p><p>要开发一个Java程序，我们得安装JDK，而要安装JDK，我们得先有JDK，所以，我们会先来讲解JDK的下载和安装JDK的下载和安装讲解完毕之后，我们就可以进行Java程序的开发了，</p><p>这里我会带着大家一起开发第一个Java程序，而大家在练习的过程中可能会出现一些小问题，所以，在大家练习后，我们会讲解一下开发中的常见问题。</p><p>最后呢，我们还会讲解两个小知识，一个是常用DOS命令，一个是Path环境变量，让大家对前面使用过的一些工具能够做到知其然并知其所以然。</p><h3 id="_1-2-jdk的下载和安装" tabindex="-1">1.2 JDK的下载和安装 <a class="header-anchor" href="#_1-2-jdk的下载和安装" aria-label="Permalink to &quot;1.2 JDK的下载和安装&quot;">​</a></h3><p>下面呢，我们来学习JDK的下载与安装，在讲解JDK的下载与安装之前呢，我们先对JDK做一个介绍：</p>',23),si=s("strong",null,"JDK：",-1),ii=s("strong",null,"JavaDevelopment Kit",-1),ai=s("p",null,"所以，我们得先安装了JDK，然后才能进行Java程序的开发。",-1),pi=s("p",null,"了解了JDK是什么之后，我们再来对JDK的版本做一个说明：",-1),ni=s("p",null,[s("img",{src:c,alt:"1639723620672"})],-1),li=s("p",null,"这么多的版本，大家不用记，了解即可。知道三个版本就可以了，这里我们标红了：JDK8，JDK11，JDK17。JDK8是企业用的最多的版本，JDK11和JDK17是后续长期支持更新的版本。",-1),ti=s("p",null,"了解了JDK的版本之后，下面呢，我们来学习JDK的下载。",-1),hi=s("p",null,[s("strong",null,"JDK的下载：")],-1),ei=s("li",null,[i("通过官方网站获取JDK（"),s("a",{href:"https://www.oracle.com/%EF%BC%89",target:"_blank",rel:"noreferrer"},"https://www.oracle.com/）")],-1),ki=s("li",null,[i("直接下载地址： "),s("a",{href:"https://www.oracle.com/java/technologies/javase-downloads.html",target:"_blank",rel:"noreferrer"},"https://www.oracle.com/java/technologies/javase-downloads.html")],-1),ri=l('<p>JDK下载图解</p><p><img src="'+y+'" alt="1639724104275"></p><p>下载完成后，在本地可以看到下载好的软件：</p><p><img src="'+_+'" alt="1639724256038"></p><p>JDK下载好之后，下面我们就要来安装JDK了。</p><p><strong>JDK的安装：</strong></p><p>关于安装，这里我们说两点：</p><p><img src="'+m+'" alt="1639724347484"></p><p>JDK安装图解：</p><p>第一步：双击启动下载好的JDK软件，在弹出框界面选择是</p><p><img src="'+D+'" alt="1639724972428"></p><p>第二步：看到如下界面，点击下一步</p><p><img src="'+u+'" alt="1639725058972"></p><p>第三步：看到如下界面，不要着急安装，因为它默认会安装到C:\\Program Files下面，在这里点击更改</p><p><img src="'+A+'" alt="1639725135186"></p><p>第四步：看到如下界面，修改安装路径</p><p><img src="'+F+'" alt="1639725324201"></p><p>修改路径后的界面如下，然后点击确定</p><p><img src="'+v+'" alt="1639725274572"></p><p>第五步：看到如下界面，点击下一步，等待安装</p><p><img src="'+C+'" alt="1639725464573"></p><p>第六步：看到如下界面，说明安装成功，点击关闭即可</p><p><img src="'+B+'" alt="1639725550686"></p><p>JDK安装完成后，我们到安装目录下去看看JDK的安装目录：</p><p><img src="'+J+'" alt="1639725745872"></p><p><strong>目录解释：</strong></p><p><img src="'+b+'" alt="1639725786272"></p><p>到此，我们就完成了JDK的安装，大家赶快根据老师提供的JDK软件，完成JDK的安装吧。</p><h3 id="_1-3-第一个程序" tabindex="-1">1.3 第一个程序 <a class="header-anchor" href="#_1-3-第一个程序" aria-label="Permalink to &quot;1.3 第一个程序&quot;">​</a></h3><p>JDK安装完毕后，下面我们来开发自己的第一个Java程序。</p><p>首先，我们来说一下，Java程序的开发流程：</p><p>开发一个Java 程序，需要三个步骤：编写程序，编译程序，运行程序。如图</p><p><img src="'+q+'" alt="1639738100464"></p><p>知道了Java程序的开发流程后，下面我们来实现第一个程序：</p><p>第一步：编写程序</p><p>① 在D盘根目录下新建一个文本文档文件，修改文件名为HelloWorld.java</p><p>② 选中HelloWorld.java文件，用Windows系统自带的记事本打开</p><p>③ 书写如下程序内容</p><p><img src="'+S+'" alt="1639738273278"></p><p>④ 保存文件：Ctrl+s</p>',40),oi=l('<ul><li>文件后缀名是.java，文件类型是java文件</li><li>文件名和代码中类名一致</li></ul><p>如果后缀名还是文本文档文件，需要按照下面的步骤，勾选文件扩展名</p><p><img src="'+I+'" alt="1639739017544"></p><p>程序编写完毕后，要进行编译和运行程序。而编译和运行程序目前需要在DOS窗口下进行，因此我们先说一下如何打开DOS窗口</p><p><img src="'+j+'" alt="1639739214830"></p><p>说完了如何打开DOS窗口，接下来，我们来学习编译和运行程序。</p><p>第二步：编译程序</p><ul><li>格式：javac 文件名.java</li><li>范例：javac HelloWorld.java</li></ul><p>第三步：运行程序</p><ul><li>格式：java 类名</li><li>范例：java HelloWorld</li></ul><p>如图所示：</p><p><img src="'+f+'" alt="1639739296629"></p><p>最终再控制台输出了：HelloWorld。到此第一个程序开发完毕。大家赶快动手练习吧。</p><h3 id="_1-4-常见问题" tabindex="-1">1.4 常见问题 <a class="header-anchor" href="#_1-4-常见问题" aria-label="Permalink to &quot;1.4 常见问题&quot;">​</a></h3><p><strong>1：单词拼写问题</strong></p><p><img src="'+K+'" alt="1639740068163"></p><p><strong>2：中英文符号问题</strong></p><p><img src="'+P+'" alt="1639740084193"></p><p>而关于中英文符号问题，早期的windows系统报错信息如下：</p><p><img src="'+T+'" alt="1639740114726"></p><p>最后，再给大家补充一个小知识，JDK11的新特性：</p><p><strong>JDK11开始支持 java命令直接运行.java文件</strong></p><ul><li>格式：java 文件名.java</li><li>范例：java HelloWorld.java</li></ul><p><img src="'+x+'" alt="1639740232557"></p><h3 id="_1-5-常用dos命令" tabindex="-1">1.5 常用DOS命令 <a class="header-anchor" href="#_1-5-常用dos命令" aria-label="Permalink to &quot;1.5 常用DOS命令&quot;">​</a></h3><p>在后续开发中，我们有些时候需要在DOS窗口，也就是我们前面见到的黑窗口下进行一些操作，所以，我们要掌握一些常用的操心命令。</p><p>而这些命令，又需要在黑窗口下运行，所以，这里我们先讲解如何打开DOS窗口，这里我们讲解两种常见的方式：</p><ol><li>直接在地址栏输入cmd，回车即可</li><li>通过运行窗口打开</li></ol><p>第一种方式，我们已经用过了。这里我们重点说第二种方式，通过运行窗口打开：</p><p>① 按下win+R</p><p><img src="'+w+'" alt="1639740655793"></p><p>② 输入cmd</p><p><img src="'+H+'" alt="1639740671954"></p><p>③ 按下回车键</p><p><img src="'+W+'" alt="1639740689831"></p><p>这样，我们就通过运行窗口打开了DOS窗口。下面呢，我们来学习常用的DOS命令。</p><p><img src="'+O+'" alt="1639740752206"></p><h3 id="_1-6-path环境变量" tabindex="-1">1.6 Path环境变量 <a class="header-anchor" href="#_1-6-path环境变量" aria-label="Permalink to &quot;1.6 Path环境变量&quot;">​</a></h3><p>前面我们使用过JDK的bin目录下的javac和java命令，为什么我们能够直接使用呢？这里我们来讲解一下原理。而要讲解这个原理，我们就不得不提一下Path环境变量。</p><p><strong>Path环境变量的作用：</strong></p><ul><li>它提供了windows命令行中指令的可执行文件(比如：.exe文件)路径，让我们在命令行中输入命令时，能够找到对应的可执行文件执行</li><li>简单说：让命令在命令行中使用有效</li></ul><p>为了让大家更好的理解这句话，我们来做一个操作，验证一下：</p><ul><li>在Path环境变量中配置QQ软件的命令行方式启动</li><li>C:\\Program Files (x86)\\Tencent\\QQ\\Bin</li></ul><p>如何配置呢？按照下图配置即可</p><p><img src="'+N+'" alt="1639741645239"></p><p><img src="'+V+'" alt="1639741741808"></p><p>配置完毕之后，我们到DOS窗口中，通过qq指令，就可以启动QQ软件了。</p><p><img src="'+Q+'" alt="1639741820153"></p><p>由此可见，我们把.exe文件所在的路径配置到Path环境变量中，就可以使用.exe结尾的指令来启动程序了。这个时候，我们来说一下，为什么开始的时候我们能够直接使用javac和java指定了。</p><p><img src="'+M+'" alt="1639741944747"></p><p>但是，由于这种配置，只配置了较少的命令，而我们在JDK的bin目录下还有很多的命令可以使用，比如：jps,jpackage,jmap等。所以，我们要自己配置JDK的环境变量，为了后续的一些软件能够找到JDK的安装目录，我们分两步来完成Java环境变量的配置：</p><p>第一步：配置JAVA_HOME变量</p><p><img src="'+z+'" alt="1639742119302"></p><p>第二步：编辑Path变量</p><p><img src="'+L+'" alt="1639742154126"></p><p>到此，我们就知道了环境变量的原理，并且完成了自己配置Java的环境变量。</p><h2 id="_2-idea" tabindex="-1">2：IDEA <a class="header-anchor" href="#_2-idea" aria-label="Permalink to &quot;2：IDEA&quot;">​</a></h2><h3 id="_2-1-idea概述和安装" tabindex="-1">2.1 IDEA概述和安装 <a class="header-anchor" href="#_2-1-idea概述和安装" aria-label="Permalink to &quot;2.1 IDEA概述和安装&quot;">​</a></h3><p>那什么是IDEA呢？</p><p>**IDEA：**全称Intellij IDEA，是用于Java语言开发的集成环境，是业界公认的目前用于Java程序开发最好的工具</p><p>**集成环境：**把代码编写，编译，运行，调试等多种功能综合到一起的开发工具</p><p>举例说明，我们前面开发一个Java程序，需要下面这些工具的配合：</p><p><img src="'+R+'" alt="1639742942464"></p><p>而我们现在开发一个Java程序，只需要一个工具就可以了：</p><p><img src="'+Y+'" alt="1639742964462"></p><p>它把代码编写，编译，运行，调试等多种功能综合到一起了，这就是集成开发环境。除了IDEA以外，还有下面几种常见的用于Java程序开发的集成环境：</p><p><img src="'+U+'" alt="1639743071477"></p><p>知道了IDEA是什么后，下面我们来说一下IDEA的下载和安装。</p><p><strong>IDEA的下载和安装：</strong></p><p>**下载：**<a href="https://www.jetbrains.com/idea" target="_blank" rel="noreferrer">https://www.jetbrains.com/idea</a></p><p>**安装：**建议修改安装路径</p><p>安装图解：可以根据如下步骤完成IDEA的安装</p><p><img src="'+X+'" alt="1639743315958"></p><h3 id="_2-2-idea中helloworld" tabindex="-1">2.2 IDEA中HelloWorld <a class="header-anchor" href="#_2-2-idea中helloworld" aria-label="Permalink to &quot;2.2 IDEA中HelloWorld&quot;">​</a></h3><p>安装完IDEA后，下面我们就来使用IDEA完成HelloWorld案例。</p><p>首先，我们来启动IDEA，启动的时候还有一些基本的配置，一起来看一下：</p><p>第一步：双击桌面上的IDEA图标，选择Do not import settings，点击OK</p><p><img src="'+Z+'" alt="1639743577863"></p><p>第二步：看到如下界面</p><p><img src="'+G+'" alt="1639743669575"></p><p>选择：Evaluate for free，点击Evaluate</p><p><img src="'+$+'" alt="1639743724589"></p><p>第三步：看到如下界面，点击Continue</p><p><img src="'+ss+'" alt="1639743835817"></p><p>第四步：看到如下界面，启动配置成功</p><p><img src="'+is+'" alt="1639743891697"></p><p>接着，我们来完成HelloWorld案例：</p><p>这里先介绍下IDEA中的代码结构：</p><p><img src="'+as+'" alt="1639744009142"></p><p><img src="'+ps+'" alt="1639744035432"></p><p>接着，我们说一下IDEA中完成HelloWorld案例的基本流程：</p><p>① 新建一个空项目(javase_code)</p><p>② 新建一个新模块(idea_test)</p><p>③ 在idea_test模块的src下新建一个包(com.itheima)</p><p>④ 在com.itheima包下新建一个类(HelloWorld)</p><p>⑤ 在HelloWorld类中编写代码(main回车，sout回车)</p><p>⑥ 在IDEA中运行HelloWorld</p><p>下面，我们就一起来完成IDEA中HelloWorld案例的编写，编译和运行</p><p>① 新建一个空项目(javase_code)：</p><p>第一步：点击New Project</p><p><img src="'+ns+'" alt="1639744182660"></p><p>第二步：选择Empty Project，点击Next</p><p><img src="'+ls+'" alt="1639744260619"></p><p>第三步：修改项目名称，修改项目存储路径，点击Finish，弹出一个窗体，然后点击Create</p><p><img src="'+ts+'" alt="1639744399116"></p><p>第四步：看到如下界面，空项目创建成功</p><p><img src="'+hs+'" alt="1639744560888"></p><p>② 新建一个新模块(idea_test)</p><p>第一步：选择File，点击Project Structure...</p><p><img src="'+es+'" alt="1639744630418"></p><p>第二步：在弹出的窗体中，按照1,2,3的步骤选择，来新建一个模块</p><p><img src="'+ks+'" alt="1639744766449"></p><p>第三步：在弹出的窗体中，默认选择Java模块，JDK选择的也是17，点击Next即可</p><p><img src="'+rs+'" alt="1639744868162"></p><p>第四步：在弹出的窗体中，修改模块名称，点击Finish</p><p><img src="'+os+'" alt="1639744975845"></p><p>第五步：然后点击OK即可</p><p><img src="'+gs+'" alt="1639745070048"></p><p>这样我们建好了一个模块：</p><p><img src="'+Es+'" alt="1639745121075"></p><p>③ 在idea_test模块的src下新建一个包(com.itheima)</p><p>第一步：展开模块，按照1,2,3的步骤选择，来新建一个包</p><p><img src="'+ds+'" alt="1639745243246"></p><p>第二步：在弹出框里面输入包名，然后回车即可</p><p><img src="'+cs+'" alt="1639745404879"></p><p>这样我们建好了一个包：</p><p><img src="'+ys+'" alt="1639745447646"></p><p>④ 在com.itheima包下新建一个类(HelloWorld)</p><p>第一步：选中com.itheima这个包，按照1,2,3的步骤选择，来新建一个类</p><p><img src="'+_s+'" alt="1639745503256"></p><p>第二步：在弹出框里面输入类名，然后回车即可</p><p><img src="'+ms+'" alt="1639745567182"></p><p>这样我们建好了一个类：</p><p><img src="'+Ds+'" alt="1639745635074"></p><p>⑤ 在HelloWorld类中编写代码(main回车，sout回车)</p><p>在类中编写代码，可以手动编写，也可以采用快捷方式编写</p><p><img src="'+us+'" alt="1639745672970"></p><p>⑥ 在IDEA中运行HelloWorld</p><p>在代码中，右键选择Run &#39;HelloWorld.main()&#39; 运行</p><p><img src="'+As+'" alt="1639745760081"></p><p>在控制台输出了结果：</p><p><img src="'+Fs+'" alt="1639745840868"></p><p>这样我们就完成了IDEA中HelloWorld案例。</p><p>回顾一下图中内容：</p><p><img src="'+vs+'" alt="1639745874976"></p><p>大家赶快动手练习一下吧。</p><h3 id="_2-3-idea中基本配置-注释" tabindex="-1">2.3 IDEA中基本配置&amp;注释 <a class="header-anchor" href="#_2-3-idea中基本配置-注释" aria-label="Permalink to &quot;2.3 IDEA中基本配置&amp;注释&quot;">​</a></h3><p>第一个：修改背景主题为白色</p><p><img src="'+Cs+'" alt="1639746135128"></p><p>第二个：修改字体大小</p><p>按照1,2,3,4进行设置即可</p><p><img src="'+Bs+'" alt="1639746171990"></p><p>至于其他的设置，后面我们用到的时候再去讲解。</p><p>讲解完IDEA的这两个基本设置后，下面，我们说一下注释，那什么是注释呢？</p><ul><li>注释是指在程序中添加的说明性信息</li><li>注释不参与程序运行，仅起到说明作用</li></ul><p>这里我们再来介绍一下注释的分类：</p><p><img src="'+Js+`" alt="1639746269066"></p><p>了解了注释的作用和分类后，下面我们来对前面讲解过的HelloWorld案例添加注释：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    Java程序中最基本的组成单位是类</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    类的定义格式是：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        public class 类名 {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HelloWorld</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        这是main方法</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        main方法是程序的入口方法，代码的执行是从main方法开始的</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //这是输出语句，能够将&quot;&quot;里面的内容输出到控制台，并且&quot;&quot;里面的内容是可以修改的</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;HelloWorld&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Java&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>有了注释以后，我们再来看这段代码，明显就容易理解了。后面大家自己在编写代码的时候，也要多写写注释，在实际开发中，我们编写的程序也是要添加注释的。</p><p>这样既方便自己阅读，也方便别人阅读。</p><h3 id="_2-4-idea中常用快捷键" tabindex="-1">2.4 IDEA中常用快捷键 <a class="header-anchor" href="#_2-4-idea中常用快捷键" aria-label="Permalink to &quot;2.4 IDEA中常用快捷键&quot;">​</a></h3><p>为了提高我们后续写程序的效率，这里呢，我们来讲一些IDEA中常用的快捷键：</p><ul><li><p>快速生成main方法和输出语句</p><ul><li>main方法：main或者psvm，回车</li><li>输出语句：sout，回车</li></ul></li><li><p>常用快捷键</p><ul><li>Ctrl+D：复制数据到下一行</li><li>Ctrl+X：剪切数据，可以用来删除所在行</li><li>Ctrl+Alt+L：格式化代码，建议自己写代码的时候就注意格式</li><li>Ctrl+/：对选中的代码添加单行注释，如果想取消注释，再来一次即可</li><li>Ctrl+Shift+/：对选中的代码添加多行注释，如果想取消注释，再来一次即可</li></ul></li></ul><p>根据老师的讲解，大家练习一下常用的快捷键吧。</p><h3 id="_2-5-idea中模块操作" tabindex="-1">2.5 IDEA中模块操作 <a class="header-anchor" href="#_2-5-idea中模块操作" aria-label="Permalink to &quot;2.5 IDEA中模块操作&quot;">​</a></h3><p>IDEA的基本使用我们掌握了，最后呢，我们再来说一下，IDEA中的模块操作，而关于模块操作呢，分为三种：</p><ul><li>新建模块</li><li>删除模块</li><li>导入模块</li></ul><p>下面我们分别来操作一下。</p><p>**新建模块：**HelloWorld案例中讲解过了，这里就不再讲解了，想不起来了，翻到上面去看看</p><p>**删除模块：**删除模块又分为从工作区删除和从硬盘删除，你可以根据自己的需要，选择对应的方式进行删除</p><p><img src="`+bs+'" alt="1639746912516"></p><p><strong>导入模块：</strong></p><p>建议把模块复制到空项目所在路径下，然后找到新建模块的地方，只不过这一次不是新建模块，而是导入模块，所以，要选择Import Module</p><p><img src="'+qs+'" alt="1639747135494"></p><p>找到要导入的模块，点击OK</p><p><img src="'+Ss+'" alt="1639747240911"></p><p>然后一路next，直到出现如下的界面，点击Overwrite即可</p><p><img src="'+Is+'" alt="1639747313468"></p><p>看到下面的界面，点击Finish</p><p><img src="'+js+'" alt="1639747438239"></p><p>最后点击OK即可</p><p><img src="'+fs+'" alt="1639747499310"></p><p>这样我们就成功的导入了一个模块：</p><p><img src="'+Ks+'" alt="1639747543186"></p><p>导入模块的注意事项：</p><ul><li>把模块复制到空项目所在路径下</li><li>出现如下错误，知道如何处理</li></ul><p><img src="'+Ps+'" alt="1639746974241"></p><p>到此，关于IDEA的模块操作我们就讲完了。</p><h2 id="_3-基础语法" tabindex="-1">3：基础语法 <a class="header-anchor" href="#_3-基础语法" aria-label="Permalink to &quot;3：基础语法&quot;">​</a></h2><p>下面呢，我们来学习Java基础语法部分的知识，这些内容是我们后面编写程序的基本功，所以呢，大家得好好学习，下面我们说一下这一块的课程安排：</p><p><img src="'+Ts+'" alt="1639748122994"></p><p>至于这5个小知识，我们该怎么用，下面呢，我们分别来讲解，首先，我们学习字面量。</p><h3 id="_3-1-字面量" tabindex="-1">3.1 字面量 <a class="header-anchor" href="#_3-1-字面量" aria-label="Permalink to &quot;3.1 字面量&quot;">​</a></h3><p>那什么是字面量呢？</p><ul><li>直接写出来的人可以理解的数据，在java中叫做字面量</li><li>举例：“HelloWorld”，666，13.14</li></ul><p>那Java中有哪些类型的字面量呢？</p><p><img src="'+xs+`" alt="1639748232481"></p><p>知道了Java中的字面量后，下面我们到IDEA中去演示一下字面量的使用：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        字符串字面量：	    用双引号括起来的内容。&quot;HelloWorld&quot;,&quot;程序员&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		整数字面量：		不带小数的数字。666,-88</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		小数字面量：		带小数的数字。13.14,-5.21</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		字符字面量：		用单引号括起来的内容。&#39;A&#39;,&#39;0&#39;,&#39;我&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		布尔字面量：		布尔值，表示真假。true,false</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LiteralDemo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //字符串字面量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;HelloWorld&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;程序员&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //整数字面量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">666</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">88</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //小数字面量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13.14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.21</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //字符字面量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;A&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;我&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //布尔字面量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_3-2-数据类型" tabindex="-1">3.2 数据类型 <a class="header-anchor" href="#_3-2-数据类型" aria-label="Permalink to &quot;3.2 数据类型&quot;">​</a></h3><p>刚才我们学习了字面量，而Java是一种强类型语言，针对每种数据都给出了明确的数据类型，那我们刚才学习的几种字面量分别应该是什么类型的呢？</p><p><img src="`+ws+'" alt="1639748532558"></p><p>那为什么会有不同的数据类型呢？因为</p><ul><li>不同的数据类型分配了不同的内存空间</li><li>不同的内存空间，所存储的数据大小是不一样的</li></ul><p>在讲解不同的数据类型前，这里我们先普及一个小知识，就是字节的概念：</p><p>计算机中存储数据的最小单位是：字节(byte)，用B表示。</p><p>我们可以看一下硬盘存储的文件：以字节为单位</p><p><img src="'+Hs+'" alt="1639748712003"></p><p>为了帮助大家更好的理解字节这个单位，我们来说一下，常见的存储单位：</p><p>1TB = 1024GB</p><p>1GB = 1024MB</p><p>1MB = 1024KB</p><p>1KB = 1024B</p><p>这样呢，我们对字节就能有一个基础认知。有了一个基础的认知之后，我们再来说Java中的数据类型</p><p><img src="'+Ws+'" alt="1639748785687"></p><p>今天我们重点学习的是基本数据类型，关于引用数据类型，后面我们会重点学习。</p><p>在这里，我们给出每种基本数据类型的内存占用和取值范围，大家了解一下：</p><p><img src="'+Os+'" alt="1639748866566"></p>',219),gi=l('<p>整数默认是：int类型</p><p>浮点数默认是：double类型</p><p>这样呢，我们就了解了Java中的8种基本数据类型，以及每种数据类型占用字节的情况和取值范围。关于数据类型，我们就先讲到这里。</p><h3 id="_3-3-变量" tabindex="-1">3.3 变量 <a class="header-anchor" href="#_3-3-变量" aria-label="Permalink to &quot;3.3 变量&quot;">​</a></h3><p>学完后数据类型后，下面呢，我们来学习Java中非常重要的一个知识：变量。</p><p>那为什么要有变量呢？看这里，我们写了一段代码，在控制台显示商品的促销活动：</p><p><img src="'+Ns+'" alt="1639749167095"></p><p>结果，老板觉得，这个价格有点高，怕销售不好，所以决定再降100元，要求把所有的998的地方修改为888。于是你就开始改代码，改完之后如下：</p><p><img src="'+Vs+'" alt="1639749235135"></p><p>结果呢？老板又觉得不划算，让你还是改回998吧，这个时候，你就要哭了。还好要修改的地方不多，要是有很多地方都要进行类似的操作，那多麻烦啊，有没有简化的方式呢？</p><p>答案当然是有的，我们找一个空间存储数据：888，并给它起个名字：price</p><p><img src="'+Qs+'" alt="1639749348313"></p><p>这样我们的代码就可以写成这个样子：</p><p><img src="'+Ms+'" alt="1639749389479"></p><p>如果要修改price里面的数据，我们只需要修改一处就可以了，代码不需要改动，但是却实现了任意修改price的效果。</p><p><img src="'+zs+`" alt="1639749434719"></p><p>其实，这就是Java中的变量技术。有了它之后，我们就可以把变化的数据用一个变量存储，代码正常编写即可，如果需要修改数据，我们修改变量的值就可以了。那什么是变量呢？</p><ul><li>变量就是内存中的存储空间</li><li>空间中存储的数据是可以发生改变</li></ul><p>知道了，什么是变量后，下面我们来说一下变量的定义格式：</p><ul><li><p>格式：数据类型 变量名 = 变量值;</p></li><li><p>范例：int price = 998;</p><p>根据变量名进行使用，可以输出，也可以修改值</p></li></ul><p>了解了变量的定义格式和使用方式后，下面我们到IDEA中去演示一下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    格式：数据类型 变量名 = 变量值;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> VariableDemo01</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //定义一个int类型的变量，用来表示价格</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 998</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //输出变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(price);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //修改变量的值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 888</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //再次输出变量的值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(price);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>学完了变量的定义，输出使用和修改值使用后，大家赶快动手练习一下吧。</p><h3 id="_3-4-变量的案例" tabindex="-1">3.4 变量的案例 <a class="header-anchor" href="#_3-4-变量的案例" aria-label="Permalink to &quot;3.4 变量的案例&quot;">​</a></h3><p>了解了变量的定义和基本使用后，下面我们来做两个案例，熟悉一下变量的使用：</p><h4 id="_3-4-1-手机信息描述" tabindex="-1">3.4.1 手机信息描述 <a class="header-anchor" href="#_3-4-1-手机信息描述" aria-label="Permalink to &quot;3.4.1 手机信息描述&quot;">​</a></h4><p>需求：分析下图指定数据，看看哪些可以通过变量表示，并思考采用那种数据类型，最后通过程序实现</p><p>指定数据：京东价，重量，颜色</p><p><img src="`+Ls+`" alt="1639749873847"></p><p>分析：</p><p>① 京东价，重量，选择颜色这些字都是固定的，但是他们后面的数据是变化的，所以要用变量表示</p><p>② 价格，可以用double或者int类型来表示，这里我们用int类型表示；</p><p>​ 重量，用double类型表示；颜色，用String类型表示</p><p>分析完毕之后，下面我们到IDEA中去实现一下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    手机信息描述</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> VariableTest01</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //定义秒杀价变量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3599.00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //定义颜色变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        String color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;蓝色&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //定义版本变量，纪录的是内存大小</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//        System.out.println(price);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//        System.out.println(color);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//        System.out.println(size);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //为了输出效果好看一些，我加上一些内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;秒杀价是：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">price);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;你选择的颜色是：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;你选择的版本是：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">size);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //字符串字面值+任意的数据=字符串数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>讲解完毕后，大家赶快动手练习一下吧。</p><h4 id="_3-4-2-疫情防控信息采集表" tabindex="-1">3.4.2 疫情防控信息采集表 <a class="header-anchor" href="#_3-4-2-疫情防控信息采集表" aria-label="Permalink to &quot;3.4.2 疫情防控信息采集表&quot;">​</a></h4><p>需求：分析右图信息，并通过程序实现</p><p><img src="`+Rs+'" alt="1639749999955"></p><p>通过上图数据，我们可以根据变化的数据，提取出下图：</p><p><img src="'+Ys+`" alt="1639750064471"></p><p>分析：</p><p>① String name = “风清扬”;</p><p>② int age = 36;</p><p>③ char gender = ‘男’; 也可以采用String类型表示</p><p>④ double temperature = 36.2;</p><p>⑤ boolean flag = true; 也可以采用char或者String表示</p><p>分析完毕之后，下面我们到IDEA中去实现一下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    疫情防控信息采集表</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> VariableTest02</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //定义变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        String name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;风清扬&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 18</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        char</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gender </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;男&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> temperature </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 36.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> flag </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //输出数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;姓名是：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;年龄是：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> age);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;性别是：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gender);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;体温是：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> temperature);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;是否接种过疫苗：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> flag);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>讲解完毕后，大家赶快动手练习一下吧。</p><h3 id="_3-5-变量的注意事项" tabindex="-1">3.5 变量的注意事项 <a class="header-anchor" href="#_3-5-变量的注意事项" aria-label="Permalink to &quot;3.5 变量的注意事项&quot;">​</a></h3><p>关于变量的使用呢，我们讲解几个小的注意事项，大家了解一下，这样呢，遇到变量的问题后，大家就可以知道如何解决了。</p><p>变量的注意事项：</p><ul><li>变量名不能重复</li><li>变量未赋值，不能使用</li><li>定义long类型变量，数据后面加L</li><li>定义float类型变量，数据后面加F</li></ul><p>IDEA中代码演示如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    变量使用的注意事项</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> VariableDemo02</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//        int age = 20;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//        int money;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">////        money = 20;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//        System.out.println(money);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> money </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000000000000L</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 12.34F</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>讲解完毕后，大家赶快动手练习一下吧。</p><h3 id="_3-6-关键字" tabindex="-1">3.6 关键字 <a class="header-anchor" href="#_3-6-关键字" aria-label="Permalink to &quot;3.6 关键字&quot;">​</a></h3><p>下面我们来学习一个小的知识点：关键字。</p><p>首先，我们得知道什么是关键字：</p><p>**关键字：**就是被Java语言赋予了特定含义的单词</p><p>我们先来看一下，曾经写过的代码中，出现的关键字：</p><p><img src="`+Us+'" alt="1639750407320"></p><p>了解了什么是关键字后，我们来说一下<strong>关键字的特点</strong>：</p><ul><li>关键字的字母全部小写</li><li>常用的代码编辑器，针对关键字有特殊的颜色标记，非常直观</li></ul><p>知道了关键字的特点后，这里我们给大家看看Java中的关键字：</p><p><img src="'+Xs+'" alt="1639750514625"></p><p>虽然比较多，但是大家不用担心。因为：关键字，我们不需要专门记忆。这些关键字我们在开发中比较常用的，写的多了，你自然就记住了。好了，Java中的关键字我们就先讲到这里。</p><h3 id="_3-7-标识符" tabindex="-1">3.7 标识符 <a class="header-anchor" href="#_3-7-标识符" aria-label="Permalink to &quot;3.7 标识符&quot;">​</a></h3><p>下面呢，我们来讲解基础语法部分最后一个知识：标识符。</p><p>首先，我们来说一下什么是标识符：</p><p>**标识符：**就是给类，方法，变量等起名字的符号</p><p>比如，我们前面写类的时候，起的名字：HelloWorld，变量的时候，价格，price等，这就是标识符。</p><p>那这个符号你能随便写呢，当然是不能的，这里我们来看一下<strong>标识符的组成规则</strong>：由数字、字母、下划线(_)和美元符($)组成</p><p>了解了组成规则后，这里我们还得说一下<strong>注意事项：</strong></p><ul><li>不能以数字开头</li><li>不能是关键字</li><li>区分大小写</li></ul><p>判断下面哪些标识符不符合规则</p><p>bj b2 2b _2b class helloworld</p><p>按照我们讲解的规则，大家应该能够判断出来：2b和class是不符合规则的。</p><p>知道了标识符的组成规则和注意事项后，这里我们再说一下起名字常用的<strong>命名约定：</strong></p><ul><li>小驼峰命名法 <ul><li>约定1：标识符一个单词的时候，首字母小写</li><li>范例1：name</li><li>约定2：标识符是多个单词的时候，第一个单词首字母小写，其他单词首字母大写</li><li>范例2：firstName</li></ul></li><li>大驼峰命名法 <ul><li>约定1：标识符一个单词的时候，首字母大写</li><li>范例1：Hello</li><li>约定2：标识符是多个单词的时候，每个单词首字母大写</li><li>范例2：HelloWorld</li></ul></li></ul><p>一般来说，小驼峰命名法适用于对方法，变量等起名字。大驼峰命名法适用于对类，接口等起名字。</p><p>最后再强调一点，就是我们起名字，最好能够做到：<strong>见名知意</strong></p><p>比如，我们前面讲解过的变量的案例中，我们起的名字就做到了见名知意。</p><p><img src="'+Zs+'" alt="1639751032842"></p>',85);function Ei(di,ci,yi,_i,mi,Di){const a=h("font");return k(),e("div",null,[$s,s("p",null,[si,i("（"),p(a,{color:"red"},{default:n(()=>[ii]),_:1}),i(")：Java开发工具包，也就是说必须要有JDK才能开发Java程序")]),ai,pi,ni,li,ti,hi,s("ul",null,[ei,ki,s("li",null,[p(a,{color:"red"},{default:n(()=>[i("**注意：针对不同操作系统，下载对应的JDK**")]),_:1})])]),ri,p(a,{color:"red"},{default:n(()=>[i("**注意：**")]),_:1}),oi,p(a,{color:"red"},{default:n(()=>[i("**说明：**")]),_:1}),i("E+38表示：乘以10的38次方。同理E-45表示：乘以10的负45次方"),gi])}const Fi=t(Gs,[["render",Ei]]);export{Ai as __pageData,Fi as default};
